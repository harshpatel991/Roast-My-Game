packages:
    yum:
        certbot : []
        python3-certbot-nginx : []

files:
  /opt/setup-ssl.sh:
    mode: "000777"
    owner: root
    group: root
    content: |
      #!/bin/bash
      set -x

      source /opt/elasticbeanstalk/support/envvars

      echo "============ START SETUP SSL ============";

      if $SHOULD_GENERATE_CERT; then
        echo "Generating new cert"
        certbot --nginx -d rmg-env-cloned-2.famar38uup.us-east-1.elasticbeanstalk.com -d www.rmg-env-cloned-2.famar38uup.us-east-1.elasticbeanstalk.com --non-interactive --agree-tos -m ${CERT_EMAIL}
      else
        echo "Generating new cert disabled";
      fi

      if $SHOULD_CRON_REFRESH_CERT; then
        echo "Creating cron to refresh cert"
        systemctl status certbot-renew.timer
        systemctl start certbot-renew.timer
        systemctl status certbot-renew.timer
      else
        echo "Refresh cert cron is disabled"
      fi
      echo "============ END SETUP SSL ============";
  /opt/update-ssl.sh:
    mode: "000777"
    owner: root
    group: root
    content: |
      #!/bin/bash
      set -x;

      source /opt/elasticbeanstalk/support/envvars

      sudo /opt/getssl/getssl ${SERVER_DOMAIN}

      cd /root/;
      sudo zip --symlinks -FS -r /etc/getssl-backup.zip .getssl

      echo "Uploading updated cert to S3";
      #aws s3 cp /etc/getssl-backup.zip "s3://roastmygame-security-private/${CERT_ENV}/";
      echo "Completed uploading updated cert to S3";

container_commands:
    00_run_setup_ssl:
        command: "sudo /opt/setup-ssl.sh"
